name: Executar Terraform para Criar Diretório e Arquivo no Ubuntu

on:
  push:
    branches:
      - feature/criar-diretorio-terraform

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checar o repositório
        uses: actions/checkout@v2

      - name: Configurar chave SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Tentar Instalar o Terraform via apt
        run: |
          set -e
          echo "Tentando instalar o Terraform via apt..."
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y terraform

      - name: Inicializar o Terraform
        run: |
          set -e
          terraform init

      - name: Validar Terraform
        run: |
          set -e
          terraform validate

      - name: Executar Terraform Plan
        run: |
          export TF_VAR_ssh_private_key="${{ secrets.SSH_PRIVATE_KEY }}"
          terraform plan
        
      - name: Aplicar Terraform
        run: |
          set -e
          export TF_VAR_ssh_private_key="${{ secrets.SSH_PRIVATE_KEY }}"
          terraform apply -auto-approve

      - name: Finalizar com sucesso
        if: success()
        run: echo "Terraform executado com sucesso. Diretório e arquivo criados."

      - name: Exibir mensagem de erro se houver falha
        if: failure()
        run: |
          echo "### ERRO NA EXECUÇÃO DO TERRAFORM ###"
          echo "Houve um erro durante a execução do Terraform. Verifique os logs acima para mais detalhes."